apiVersion: apps/v1
kind: Deployment
metadata:
  name: project-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: project-frontend
      tier: frontend
  template:
    metadata:
      labels:
        app: project-frontend
        tier: frontend
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '80'
    spec:
      containers:
      - name: frontend
        image: xsz666/project_frontend:v3
        ports:
        - containerPort: 80
        env:
        - name: GET_HOSTS_FROM
          value: "dns"
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /readiness
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      imagePullSecrets:
      - name: ucloud-aliyun
---
apiVersion: v1
kind: Service
metadata:
  name: project-frontend
spec:
  selector:
    app: project-frontend
    tier: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: project-frontend-nodeport
spec:
  type: NodePort
  selector:
    app: project-frontend
    tier: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30080
